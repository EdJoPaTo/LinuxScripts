#!/usr/bin/env sh

# This file is meant to compatible with multiple shells, including: bash, fish, zsh

alias brew='nice brew'
alias cargo='nice cargo'
alias code='nice -n 5 code'
alias esphome='nice esphome'
alias makepkg='nice makepkg'
alias npm='nice npm'
alias oxipng='nice oxipng'
alias paru='nice paru'
alias pio='nice pio'
alias platformio='nice platformio'
alias podman='nice podman'
alias rustup='nice rustup'
alias zed='nice -n 5 zed'
alias zeditor='nice -n 5 zeditor'

command -v codium >/dev/null 2>/dev/null && alias code='nice -n 5 codium'
command -v eza >/dev/null 2>/dev/null && alias ls='eza --git'

# Help to migrate to new commands (space at start -> no zsh history entry)
alias grep=' echo use rg && false --'
alias vi=' echo use nvim && false --'
alias vim=' echo use nvim && false --'

# Add default arguments to commands (which are then always used)
alias ffmpeg='nice -n 15 ffmpeg -stats -hide_banner'
alias ffprobe='ffprobe -hide_banner'
alias ip='ip --color=auto'
alias systemctl='systemctl --no-pager --full'
alias tokei='tokei --sort code'
alias yt-dlp='nice -n 15 yt-dlp --prefer-free-formats --embed-subs --sub-langs=all --embed-thumbnail --embed-metadata --embed-chapters --video-multistreams --audio-multistreams --sponsorblock-remove=default --paths=temp:"/tmp/yt-dlp-$USER" --restrict-filenames --trim-filenames=80 --format-sort=vcodec:h264'

alias cargo-features='cargo metadata --no-deps --format-version=1 | jq ".packages.[].features"'
alias cargo-open-doc='RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --all-features --open'
alias cargo-open-llvm-cov='cargo +nightly llvm-cov test --no-cfg-coverage --no-cfg-coverage-nightly --no-fail-fast --all-features --open'
alias cargo-update-msrv='CARGO_RESOLVER_INCOMPATIBLE_RUST_VERSIONS=fallback cargo +nightly update --verbose'
alias curltime='curl --output /dev/null --silent --write-out "namelookup:%{time_namelookup} connect:%{time_connect} appconnect:%{time_appconnect} pretransfer:%{time_pretransfer} redirect:%{time_redirect} starttransfer:%{time_starttransfer} total:%{time_total}\n"'
alias deno-coverage='deno test --allow-all --reporter=dot --doc --clean --coverage=/tmp/deno-coverage && deno coverage /tmp/deno-coverage'
alias ffmpegGif='ffmpeg -an'
alias ffmpegSound='ffmpeg -vn'
alias hugo-serve='hugo server -p 4200 --buildDrafts --buildFuture' # --bind 0.0.0.0 when testing with devices on the same network
alias oxipngz='oxipng --zopfli --opt=max --fast'
alias pio-monitor='pio device monitor'
alias pio-upload='pio run --target upload'
alias randb='openssl rand -base64 33'
alias randh='openssl rand -hex 20'
alias rgf='rg --files-with-matches'
alias rgm='rg --no-filename --no-heading --no-line-number --only-matching' # useful with --replace='$1' and | sort | uniq
alias rsynca='rsync --verbose --human-readable --delete-delay --archive'
alias rsyncc='rsync --verbose --human-readable --recursive --links --copy-unsafe-links --times'
alias ssh-force-password='ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no'
alias sshf='ssh -t -o RemoteCommand="exec fish"'
alias ssht='ssh -t -o RemoteCommand="exec tmux new-session -A -s ssht"'
alias sshtop='ssh -t -o RemoteCommand="exec htop"'
alias sshuptime='ssh -t -o RemoteCommand="exec watch -x uptime"'
alias tree='eza -al --tree --git --git-ignore'
alias yt-dlp-1080='yt-dlp --format-sort=res~1080'
alias yt-dlp-1440='yt-dlp --format-sort=res~1440'
alias yt-dlp-720='yt-dlp --format-sort=res~720'
alias yt-dlp-audio='yt-dlp --extract-audio' # --audio-format=mp3 can be helpful
alias yt-dlp-smallest='yt-dlp --format-sort=vcodec:h264,+size,+br,+res,+fps'

# https://github.com/chubin/wttr.in
alias wttr='curl wttr.in && curl v2.wttr.in'
alias wttr-short='curl "wttr.in/?format=%l:+%c+%t,+%w+%m"'

alias mpc-clearadd='mpc clear -q && mpc add'
alias mpc-cropadd='mpc crop && mpc add'
alias amp='mpc --host etoPiBedAmp'

alias npx='echo edjopato fixed npx again && PATH=$(pwd)/node_modules/.bin:$PATH nice'
alias node-jsr='nice deno --reload --no-lock --node-modules-dir=false --allow-env --allow-read --allow-run --allow-write=.npmrc npm:jsr'
alias node-test='node --enable-source-maps --test --experimental-test-coverage'
alias npm-reinstall='rm -rf node_modules package-lock.json && nice npm install --no-fund && npm outdated; npm test'
alias npm-xo-update='rm -rf node_modules package-lock.json && nice npm install --no-fund --save-dev xo@latest && nice ./node_modules/.bin/xo --fix'
alias tsc-watch='rm -rf dist && nice ./node_modules/.bin/tsc --sourceMap --watch'

alias cdf='cd "$(fd --type=directory | fzf)"'
alias cdg='cd "$HOME/git/$(project-below --base-dir=$HOME/git --directory=.git | fzf --scheme=path --tiebreak=end,length)"'
alias cdgh='cd "$HOME/git/$(project-below --base-dir=$HOME/git --directory=.git --hidden | fzf --scheme=path --tiebreak=end,length)"'

# example usage: `gitBelow fetch`
# see: https://github.com/EdJoPaTo/project-below
alias gitBelow='project-below --directory=.git --result=non-zero git'
alias gitSubmoduleBelow='project-below --file=.git --result=non-zero git'

alias cargoBelow='nice -n 19 project-below --file=Cargo.toml cargo'
alias cargoLibBelow='nice -n 19 project-below --file=Cargo.toml --file="**/lib.rs" cargo'
alias denoBelow='nice -n 19 project-below --file=deno.jsonc deno'
alias npmBelow='nice -n 19 project-below --file=package.json npm'
alias pioBelow='nice -n 19 project-below --file=platformio.ini pio'
alias podmanBelow='nice -n 19 project-below --file=Dockerfile podman'

alias cargoBelow-check-quiet='nice -n 19 project-below --file=Cargo.toml --only-result --threads -- cargo check --quiet --jobs=1 --all-targets --all-features --keep-going'
alias npmBelow-ci='nice -n 19 project-below --file=package.json bash -c "rm -rf node_modules package-lock.json; git checkout package-lock.json; npm ci --no-fund 2>/dev/null || npm i --no-fund"'

alias cargoBelow-clean='project-below --hidden --file=Cargo.toml --directory=target cargo clean'
alias npmBelow-clean='project-below --hidden --file=package.json --directory=node_modules --only-result rm -rf node_modules'
alias pioBelow-clean='project-below --hidden --file=platformio.ini --directory=.pio --only-result rm -rf .pio'
alias tscBelow-clean='project-below --hidden --file=tsconfig.json --directory=dist --only-result rm -rf dist'

alias podman-image-update='nice podman pull $(podman image ls --filter=dangling=false --noheading --format="{{.Repository}}:{{.Tag}}" | rg -v "^localhost/")'
alias podman-run-interactive='podman run --interactive --tty --rm --mount=type=bind,source=.,destination=/app --workdir=/app --volume=podman-run-interactive-apk:/var/cache/apk --volume=podman-run-interactive-apt-lists:/var/lib/apt/lists --volume=podman-run-interactive-dnf-repos:/var/lib/dnf/repos --volume=podman-run-interactive-pacman-sync:/var/lib/pacman/sync --volume=podman-run-interactive-pacman-cache:/var/cache/pacman' # use podman-run-interactive docker.io/library/alpine:edge sh -c "apk add fish && exec fish"
alias podman-untag-localhost='podman image ls --format "{{.Repository}}:{{.Tag}}" | rg "^localhost/" | xargs -n1 podman untag'

alias arch='podman-run-interactive docker.io/library/archlinux:base-devel' # add: sh -c "pacman -Syu --noconfirm fish && exec fish"
alias alpine='podman-run-interactive docker.io/library/alpine:edge' # add: sh -c "apk add fish && exec fish"
