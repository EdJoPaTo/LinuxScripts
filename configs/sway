# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

exec ckb-next --background

smart_borders on
titlebar_border_thickness 0
titlebar_padding 1 0

# disable titlebar workaround
font pango:monospace 0

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu swaymsg exec -- fuzzel
#set $menu swaymsg exec wldash
#set $menu rofi -show run

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#output * bg /usr/share/backgrounds/gnome/blobs-l.svg fill
output * bg #000000 solid_color
# You can get the names of your outputs by running: swaymsg -t get_outputs
exec kanshi

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
	timeout 1 true resume 'swaymsg "output * power on"' \
	timeout 120 'swaylock -f' \
	timeout 125 'swaymsg "output * power off"' resume 'swaymsg "output * power on"'

for_window [class="."] inhibit_idle fullscreen
for_window [app_id="."] inhibit_idle fullscreen

### Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input * {
	xkb_layout "de"
	natural_scroll enabled
}

### Key bindings
# Get the keycodes via xev
#
# Basics:
#
	# Start a terminal
	bindsym $mod+Return exec $term

	bindsym $mod+b exec firefox
	bindsym $mod+e exec nautilus

	bindsym $mod+l exec swaylock -f && sleep 1 && swaymsg "output * power off"

	# Kill focused window
	bindsym $mod+Shift+q kill
	bindsym $mod+q kill

	# Start your launcher
	bindsym $mod+d exec $menu
	bindsym $mod+Space exec $menu

	bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
	bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
	#bindsym XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
	bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
	bindsym XF86AudioPlay exec playerctl play-pause
	bindsym XF86AudioStop exec playerctl pause
	bindsym XF86AudioNext exec playerctl next
	bindsym XF86AudioPrev exec playerctl previous

	bindsym Print exec grim -g "$(slurp)" ~/Pictures/Screenshots/$(date +%Y-%m-%dT%H-%m-%S).png
	bindsym $mod+Print exec grim ~/Pictures/Screenshots/$(date +%Y-%m-%dT%H-%m-%S).png

	# Drag floating windows by holding down $mod and left mouse button.
	# Resize them with right mouse button + $mod.
	# Despite the name, also works for non-floating windows.
	# Change normal to inverse to use left mouse button for resizing and right
	# mouse button for dragging.
	floating_modifier $mod normal

	# Reload the configuration file
	bindsym $mod+Shift+c reload

	# Exit sway (logs you out of your Wayland session)
	bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
	# Move your focus around
	#bindsym $mod+$left focus left
	#bindsym $mod+$down focus down
	#bindsym $mod+$up focus up
	#bindsym $mod+$right focus right
	# Or use $mod+[up|down|left|right]
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right

	# Move the focused window with the same, but add Shift
	#bindsym $mod+Shift+$left move left
	#bindsym $mod+Shift+$down move down
	#bindsym $mod+Shift+$up move up
	#bindsym $mod+Shift+$right move right
	# Ditto, with arrow keys
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right
#
# Workspaces:
#
	# Switch to workspace
	bindsym $mod+1 workspace number 1
	bindsym $mod+2 workspace number 2
	bindsym $mod+3 workspace number 3
	bindsym $mod+4 workspace number 4
	bindsym $mod+5 workspace number 5
	bindsym $mod+6 workspace number 6
	bindsym $mod+7 workspace number 7
	bindsym $mod+8 workspace number 8
	bindsym $mod+9 workspace number 9
	bindsym $mod+0 workspace number 10

	bindsym Ctrl+Alt+Left workspace prev_on_output
	bindsym Ctrl+Alt+Right workspace next_on_output

	# Move focused container to workspace
	bindsym $mod+Shift+1 move container to workspace number 1
	bindsym $mod+Shift+2 move container to workspace number 2
	bindsym $mod+Shift+3 move container to workspace number 3
	bindsym $mod+Shift+4 move container to workspace number 4
	bindsym $mod+Shift+5 move container to workspace number 5
	bindsym $mod+Shift+6 move container to workspace number 6
	bindsym $mod+Shift+7 move container to workspace number 7
	bindsym $mod+Shift+8 move container to workspace number 8
	bindsym $mod+Shift+9 move container to workspace number 9
	bindsym $mod+Shift+0 move container to workspace number 10
	# Note: workspaces can have any name you want, not just numbers.
	# We just use 1-10 as the default.
#
# Layout stuff:
#
	# You can "split" the current object of your focus with
	# $mod+b or $mod+v, for horizontal and vertical splits
	# respectively.
	#bindsym $mod+b splith
	#bindsym $mod+v splitv

	# Switch the current container between different layout styles
	#bindsym $mod+s layout stacking
	#bindsym $mod+w layout tabbed
	#bindsym $mod+e layout toggle split

	# Make the current focus fullscreen
	bindsym $mod+f fullscreen

	# Toggle the current focus between tiling and floating mode
	bindsym $mod+Shift+space floating toggle

	# Swap focus between the tiling area and the floating area
	#bindsym $mod+space focus mode_toggle

	# Move focus to the parent container
	#bindsym $mod+a focus parent
#
# Scratchpad:
#
	# Sway has a "scratchpad", which is a bag of holding for windows.
	# You can send windows there and get them back later.

	# Move the currently focused window to the scratchpad
	#bindsym $mod+Shift+minus move scratchpad

	# Show the next scratchpad window or hide the focused scratchpad window.
	# If there are multiple scratchpad windows, this command cycles through them.
	#bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
	# left will shrink the containers width
	# right will grow the containers width
	# up will shrink the containers height
	# down will grow the containers height
	bindsym $left resize shrink width 10px
	bindsym $down resize grow height 10px
	bindsym $up resize shrink height 10px
	bindsym $right resize grow width 10px

	# Ditto, with arrow keys
	bindsym Left resize shrink width 10px
	bindsym Down resize grow height 10px
	bindsym Up resize shrink height 10px
	bindsym Right resize grow width 10px

	# Return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### Colors

client.focused #ffffff99 #ffffff99 #000000 #ffffff99
client.unfocused #00000055 #00000055 #ffffff99
client.focused_inactive #00000055 #00000055 #ffffff99

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
	position top
	separator_symbol ""
	status_command i3status-rs
	font pango:monospace 10

	colors {
		statusline #ffffffaa
		background #00000099

		urgent_workspace #ff0000 #ff0000 #000000
		focused_workspace #ffffff99 #ffffff99 #000000
		active_workspace #33333399 #33333399 #ffffff
		inactive_workspace #00000099 #00000099 #cccccc
	}
}

include /etc/sway/config.d/*
